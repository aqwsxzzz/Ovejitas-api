meta {
  name: List Invitations
  type: http
  seq: 3
}

get {
  url: http://localhost:8080/api/v1/invitations?farmId={{farmId}}
  body: none
  auth: none
}

params:query {
  farmId: {{farmId}}
  ~status: pending
  ~email: user@example.com
}

headers {
  Content-Type: application/json
}

docs {
  # List Invitations

  Retrieves invitations for a specific farm with optional filtering by status and email.

  ## Authentication

  **Required**: JWT cookie from login endpoint

  ## Query Parameters

  | Parameter | Type | Required | Description |
  |-----------|------|----------|-------------|
  | farmId | string | Yes | Encoded farm ID to list invitations for |
  | status | string | No | Filter by invitation status (pending, accepted, expired, cancelled) |
  | email | string | No | Filter by recipient email (case-insensitive) |

  ## Example Requests

  ```
  # Get all invitations for a farm
  GET /api/v1/invitations?farmId=encoded_farm_id

  # Get only pending invitations
  GET /api/v1/invitations?farmId=encoded_farm_id&status=pending

  # Get invitations for a specific email
  GET /api/v1/invitations?farmId=encoded_farm_id&email=user@example.com

  # Combine filters
  GET /api/v1/invitations?farmId=encoded_farm_id&status=pending&email=user@example.com
  ```

  ## Response
  
  **Success (200)**:
  ```json
  {
    "status": "success",
    "message": "Success",
    "data": [
      {
        "id": "encoded_invitation_id_1",
        "email": "user1@example.com",
        "farmId": "encoded_farm_id",
        "role": "member",
        "token": "invitation_token_1",
        "status": "pending",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z",
        "expiresAt": "2024-01-08T00:00:00.000Z"
      },
      {
        "id": "encoded_invitation_id_2",
        "email": "user2@example.com", 
        "farmId": "encoded_farm_id",
        "role": "member",
        "token": "invitation_token_2",
        "status": "accepted",
        "createdAt": "2024-01-02T00:00:00.000Z",
        "updatedAt": "2024-01-03T10:30:00.000Z",
        "expiresAt": "2024-01-09T00:00:00.000Z"
      }
    ],
    "meta": {
      "timestamp": "2024-01-01T00:00:00.000Z"
    }
  }
  ```
  
  **Error Responses**:
  - `400`: Invalid request parameters
  - `404`: No invitations found or user doesn't own any farms
  
  ## Invitation Statuses
  
  - `"pending"` - Invitation sent but not yet accepted
  - `"accepted"` - Invitation accepted and user account created
  - `"expired"` - Invitation has passed its expiration date
  - `"cancelled"` - Invitation was cancelled by the farm owner
  
  ## Notes

  - farmId parameter is required - specifies which farm's invitations to retrieve
  - User must have access to the specified farm
  - Email filtering is case-insensitive (user@example.com matches User@Example.com)
  - Status filtering accepts: pending, accepted, expired, cancelled
  - When no filters are specified (except farmId), returns all invitations for that farm
  - All IDs are encoded using hashids for security
  - Empty array returned if no invitations match the filters
  - Tokens are included in response for reference but should not be shared
  - Expired invitations are automatically marked but not deleted
}
