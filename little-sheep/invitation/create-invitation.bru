meta {
  name: Create Invitation
  type: http
  seq: 1
}

post {
  url: http://localhost:8080/api/v1/invitations
  body: json
  auth: none
}

headers {
  Content-Type: application/json
}

body:json {
  {
    "email": "newmember@example.com",
    "farmId": "7ZWDkbpO"
  }
}

docs {
  # Create Invitation
  
  Creates a new farm invitation for a user by email address.
  
  ## Authentication
  
  **Required**: JWT cookie from login endpoint
  
  ## Request Body
  
  - `email` (string, required): Email address of the person to invite (must be valid email format)
  - `farmId` (string, required): Encoded ID of the farm to invite the user to
  
  ## Response
  
  **Success (201)**:
  ```json
  {
    "status": "success",
    "message": "Success",
    "data": {
      "id": "encoded_invitation_id",
      "email": "newmember@example.com",
      "farmId": "encoded_farm_id",
      "role": "member",
      "token": "generated_invitation_token",
      "status": "pending",
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "expiresAt": "2024-01-08T00:00:00.000Z"
    },
    "meta": {
      "timestamp": "2024-01-01T00:00:00.000Z"
    }
  }
  ```
  
  **Error Responses**:
  - `400`: Invalid email format or missing required fields
  - `404`: Farm not found or user doesn't have permission to invite
  - `409`: User is already a member of this farm or has a pending invitation
  
  ## Permissions

  This endpoint requires the `members:invite` permission, which is only available to farm owners.

  ## Notes

  - **Permission Required**: Only farm owners can create invitations (requires `members:invite` permission)
  - The farm ID must be a valid encoded farm ID
  - Invitations expire after 7 days by default
  - A unique token is generated for each invitation
  - Default role assigned is "member"
  - Email must not already be associated with the farm
  - The invitation token is used in the signup/accept process
  - All IDs are encoded using hashids for security
  - Returns 403 if user doesn't have `members:invite` permission
}
